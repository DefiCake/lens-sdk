fragment OptimisticStatusResult on OptimisticStatusResult {
  value
  isFinalisedOnChain
}

fragment ERC20 on ERC20 {
  name
  symbol
  decimals
  contract {
    ...NetworkAddress
  }
}

fragment FiatAmount on FiatAmount {
  asset {
    ...Fiat
  }
  value
}

fragment Fiat on Fiat {
  name
  symbol
  decimals
}

fragment Amount on Amount {
  asset {
    ...ERC20
  }
  value
  rate(currency: USD) {
    ...FiatAmount
  }
}

fragment FeeFollowModuleSettings on FeeFollowModuleSettings {
  amount {
    ...Amount
  }
  contract {
    ...NetworkAddress
  }
  recipient
}

fragment ProfileFollowModuleSettings on ProfileFollowModuleSettings {
  contract {
    ...NetworkAddress
  }
}

fragment RevertFollowModuleSettings on RevertFollowModuleSettings {
  contract {
    ...NetworkAddress
  }
}

fragment UnknownFollowModuleSettings on UnknownFollowModuleSettings {
  contract {
    ...NetworkAddress
  }
  followModuleReturnData
}

fragment Gasless on Gasless {
  enabled
  relay {
    ...NetworkAddress
  }
}

fragment NetworkAddress on NetworkAddress {
  address
  chainId
}

fragment Image on Image {
  url
  mimeType
  width
  height
}

fragment ProfileCoverSet on ImageSet {
  rawURL
  media {
    ...Image
  }
  altTag
  transformed(input: $profileCoverTransform) {
    ...Image
  }
}

fragment ProfilePictureSet on ImageSet {
  rawURL
  media {
    ...Image
  }
  altTag
  transformed(input: $profilePictureTransform) {
    ...Image
  }
}

fragment ProfileFields on Profile {
  __typename
  id
  metadata {
    rawURL
    displayName
    bio
    coverPicture {
      ...ProfileCoverSet
    }
  }
  handle
  ownedBy {
    ...NetworkAddress
  }
  picture {
    ... on NftImage {
      collection {
        ...NetworkAddress
      }
      tokenId
      image {
        ...ProfilePictureSet
      }
      verified
    }
    ... on ImageSet {
      ...ProfilePictureSet
    }
  }
  gasless {
    ...Gasless
  }
  followModule {
    ... on FeeFollowModuleSettings {
      ...FeeFollowModuleSettings
    }
    ... on ProfileFollowModuleSettings {
      ...ProfileFollowModuleSettings
    }
    ... on RevertFollowModuleSettings {
      ...RevertFollowModuleSettings
    }
    ... on UnknownFollowModuleSettings {
      ...UnknownFollowModuleSettings
    }
  }
  followNftAddress {
    ...NetworkAddress
  }
  attributes {
    type
    key
    value
  }
  onChainIdentity {
    proofOfHumanity {
      isVerified
    }
    ens {
      name
    }
    sybilDotOrg {
      source {
        twitter {
          handle
        }
      }
    }
    worldcoin {
      isHuman
    }
  }
  interests
  isFollowedByMe {
    ...OptimisticStatusResult
  }
  isFollowingMe {
    ...OptimisticStatusResult
  }
  guardian {
    protected
    cooldownEndsOn
  }
  invitesLeft
  createdAt
}

fragment Profile on Profile {
  ...ProfileFields

  invitedBy {
    ...ProfileFields
  }
}

fragment PaginatedResultInfo on PaginatedResultInfo {
  prev
  next
}

fragment App on App {
  id
}

fragment MomokaInfo on MomokaInfo {
  proof
}

fragment Post on Post {
  id
  by {
    ...ProfileFields
  }

  # The metadata for the post
  # metadata: PublicationMetadata!

  # # The open action module
  # openActionModules: [OpenActionModule!]

  # # The reference module
  # referenceModule: ReferenceModule

  publishedOn {
    ...App
  }
  isHidden
  isGated
  momoka {
    ...MomokaInfo
  }

  # operations(by: ProfileId): PublicationOperations

  createdAt
}

fragment CommentBase on Comment {
  id
  by {
    ...ProfileFields
  }

  # The metadata for the post
  # metadata: PublicationMetadata!

  # # The collect module
  # openActionModules: [OpenActionModule!]!

  # # The reference module
  # referenceModule: ReferenceModule

  publishedOn {
    ...App
  }
  isHidden
  isGated
  momoka {
    ...MomokaInfo
  }

  # operations(by: ProfileId): PublicationOperations

  createdAt
}

fragment Comment on Comment {
  ...CommentBase
  root {
    ...Post
  }
  commentOn {
    ... on Post {
      ...Post
    }
    ... on Comment {
      ...CommentBase
    }
    ... on Quote {
      ...QuoteBase
    }
  }
  firstComment {
    ...CommentBase
  }
}

fragment Mirror on Mirror {
  id
  by {
    ...ProfileFields
  }
  momoka {
    ...MomokaInfo
  }
  mirrorOf {
    ... on Post {
      ...Post
    }
    ... on Comment {
      ...Comment
    }
    ... on Quote {
      ...Quote
    }
  }
  createdAt
}

fragment QuoteBase on Quote {
  id
  by {
    ...ProfileFields
  }

  #   # The metadata for the post
  #   metadata: PublicationMetadata!

  #   # The collect module
  #   openActionModules: [OpenActionModule!]!

  #   # The reference module
  #   referenceModule: ReferenceModule

  publishedOn {
    ...App
  }
  isHidden
  isGated
  momoka {
    ...MomokaInfo
  }

  #   operations(by: ProfileId): PublicationOperations

  createdAt
}

fragment Quote on Quote {
  ...QuoteBase
  quotedOn {
    ... on Post {
      ...Post
    }
    ... on Comment {
      ...CommentBase
    }
    ... on Quote {
      ...QuoteBase
    }
  }
}
